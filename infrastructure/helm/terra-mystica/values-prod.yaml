# Production environment values for terra-mystica
# This file overrides values.yaml for production deployment

global:
  imageRegistry: "your-registry.com/"  # Update with your container registry
  imagePullSecrets:
    - name: regcred

app:
  environment: production

frontend:
  replicaCount: 3
  image:
    pullPolicy: Always
    tag: "stable"  # Use stable tags for production
  
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rate-limit: "100"
      nginx.ingress.kubernetes.io/rate-limit-rpm: "6000"
    hosts:
      - host: terra-mystica.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: terra-mystica-tls
        hosts:
          - terra-mystica.com
  
  env:
    NEXT_PUBLIC_API_URL: "https://api.terra-mystica.com"
    NEXT_PUBLIC_MAPBOX_TOKEN: ""  # Set via external secret
    NODE_ENV: production
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

backend:
  replicaCount: 5
  image:
    pullPolicy: Always
    tag: "stable"
  
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rate-limit: "200"
      nginx.ingress.kubernetes.io/rate-limit-rpm: "12000"
    hosts:
      - host: api.terra-mystica.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: terra-mystica-api-tls
        hosts:
          - api.terra-mystica.com
  
  env:
    ENVIRONMENT: production
    DEBUG: "false"
    LOG_LEVEL: INFO
    ENABLE_GPU: "true"  # Enable GPU for production if available
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 20
    targetCPUUtilizationPercentage: 60

celery:
  replicaCount: 3
  image:
    pullPolicy: Always
    tag: "stable"
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70

postgresql:
  enabled: false  # Use external managed database in production
  external:
    enabled: true
    host: "terra-postgres.cluster-xyz.us-west-2.rds.amazonaws.com"
    port: 5432

redis:
  enabled: false  # Use external managed Redis in production
  external:
    enabled: true
    host: "terra-redis.abc123.cache.amazonaws.com"
    port: 6379

opensearch:
  enabled: false
  external:
    enabled: true
    host: "search-terra-mystica-xyz.us-west-2.es.amazonaws.com"
    port: 443
    scheme: https

monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true

externalSecrets:
  enabled: true
  secretStore:
    name: aws-secrets-manager
    kind: SecretStore